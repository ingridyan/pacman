import pygame
import math


class Person:
    def __init__(self, screen, name, x, y, xRate, yRate, facingRight, imageSizeX, imageSizeY, imageName, isShooter):
        self.name = name
        self.screen = screen
        self.x = x
        self.y = y
        self.xRate = xRate
        self.yRate = yRate
        self.facingRight = facingRight

        self.imageSizeX = imageSizeX
        self.imageSizeY = imageSizeY

        self.isShooter = isShooter
        self.isAlive = True

        self.imageWalkingRight = pygame.image.load(imageName)
        self.imageWalkingRight = (pygame.transform.scale(self.imageWalkingRight, (imageSizeX, imageSizeY)))
        self.imageWalkingLeft = pygame.transform.flip(self.imageWalkingRight, True, False)

    def displayinfo(self):
        return '{} {} {} {} {} {}'.format(self.name, self.x, self.y, self.xRate, self.yRate,
                                          self.facingRight)

    def ifCollision(self, bulletX, bulletY):
        distance = math.sqrt((math.pow(self.x - bulletX, 2)) + (math.pow(self.y - bulletY, 2)))
        if distance < 70:
            return True
        else:
            return False

    def drawPerson(self, bulletX, bulletY):
        if self.isShooter:
            self.isAlive = True
        else:
            if self.ifCollision(bulletX, bulletY) == True:
                self.isAlive = False

        if self.isAlive:
            if self.facingRight == True:
                self.screen.blit(self.imageWalkingRight, (self.x, self.y))
            else:
                self.screen.blit(self.imageWalkingLeft, (self.x, self.y))

    def movePerson(self):
        self.x += self.xRate
        if self.isShooter == True:
            if self.x <= 0:
                self.x = 0
            elif self.x >= 730:
                self.x = 730
            self.y += self.yRate
            if self.y <= 350:
                self.y = 350
            elif self.y >= 470:
                self.y = 470
        else:
            self.x += self.xRate
            if self.x <= 0:
                self.xRate = -self.xRate
                self.facingRight = True
                self.y += self.yRate
            elif self.x >= 730:
                self.xRate = -self.xRate
                self.facingRight = False
                self.y += self.yRate



    def respondKeyDownEvent(self, event):
        if self.isShooter == False:
            return
        else:
            # moving left and right
            if event.key == pygame.K_LEFT:
                self.imageWalkingRight = False

            if event.key == pygame.K_RIGHT:
                self.imageWalkingRight = True
            self.xRate = -self.xRate

            # moving up and down
            if event.key == pygame.K_UP:
                self.yRate = - math.fabs(self.yRate)
            if event.key == pygame.K_DOWN:
                self.yRate = math.fabs(self.yRate)


    def respondKeyUpEvent(self, event):
        if self.isShooter == False:
            return
        else:
            # moving left and right
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                self.xRate = 0
            if event.key == pygame.K_UP or event.key == pygame.K_DOWN:
                self.yRate = 0

    def getY(self):
        return self.y

    def getX(self):
        return self.x

    def getIsShooter(self):
        return self.isShooter

    def getIsFacingRight(self):
        return self.facingRight
